display: flex; -- элемент становиться flex контейнером, потомки становяться flex элементами
flex-direction: row/column/row-reverse/column-reverse -- расположение блоков (слева на право/сверху вниз/право на лево/снизу вверх); -- напрвление главной оси
/* поперечная ось перпендикулярна основной и направлена вниз или направо */
justify-content: center/flex-start/flex-end; -- положение блоков по горизонтали (по центру/в начале гл. оси/в конце гл.оси)

justify-content: space-between/space-around; (распределение с равным интервалом без отступа от границы/ с равным интервалом с отступом от границы(половина отступа между элементами ))

justify-content: по главной оси
align-content: по поперечной оси

align-content -- выравнивание РЯДОВ вдоль поперечной оси
align-items -- выравнивание ЭЛЕМЕНТОВ вдоль поперечной оси

align-items: stretch/center/flex-start/flex-end/baseline; -- выравнивание по поперечной оси (занимают вся величину/выравниваються по поперечной линии/начало попереечной оси/конец п.оси/по базовой линии текста внутри блока)

justify-content и align-items для flex контейнера
align-self для flex блока (выравнивание по поперечной оси)
    align-self: flex-start/flex-end/center/baseline/stretch;

/* если flex элементы не помещаються на одной строке то они начинают уменьщаться даже если им задан размер */
flex-wrap: nowrap/wrap/wrap-reverse -- не разрещен перенос на новую строку/разрещен перенос/перенос в обратном порядке
order: -1; -- номер flex элемента (по умолчания у всех = 0)

отцентровать элемент по вертикали и горизонталт чтобы при изменение размера элемента он оставался на месте {
    контейнеру задаем display: flex;
    элементу margin: auto;
}

/* margin, width, height не реагирует на изменение напрвления главной оси flex */

flex-basis: 100px; -- задает длину элемента вдоль главной оси (сильнее width и height)
flex-grow: 1; -- flex блок занимает все свободное место вдоль гл. оси (min-width не влияет)
/* если flex-grow несколько, то свободное место делиться на их сумму и в пропорции раздается блокам */
flex-basis: 0; -- flex-grow:1; flex-grow:2; тогда один блок будет в два раза больше другого
flex-shrink: 1/0; -- при выпадении из контейнера flex элемент будет уменьшаться/не изменяться (чем выше тем сильнее будет сжиматься)

flex: 1 2 300px; (flex-grow flex-shrink flex-basis);
    flex: initial; -> flex: 0 1 auto;
    flex: auto;    -> flex: 1 1 auto;
    flex: none;    -> flex: 0 0 auto;
    flex: 1 0;     -> flex: 1 0 0%;
    flex: 1;       -> flex: 1 1 0%;

/* если блокам задать flex-basis: 100%; и разрешить перенос wrap то элементы выстраиваються в колонну */
/* браузер автоматически задает отступы для всей страницы, чтоб избавиться задаем body {
                                                                                    margin: 0;
                                                                                    padding: 0;
                                                                                    }               */